<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java学习笔记 on haigeek</title>
    <link>http://example.org/categories/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
    <description>Recent content in java学习笔记 on haigeek</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Mar 2017 16:25:16 +0000</lastBuildDate><atom:link href="http://example.org/categories/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>web程序运行机制与HTTP基础</title>
      <link>http://example.org/note/web/web%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6%E4%B8%8Ehttp%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Wed, 08 Mar 2017 16:25:16 +0000</pubDate>
      
      <guid>http://example.org/note/web/web%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6%E4%B8%8Ehttp%E5%9F%BA%E7%A1%80/</guid>
      <description>web程序运行机制与HTTP基础 web程序运行的过程  用户在客户端浏览器出入url地址，通过浏览器发出web请求 域名服务器对url地址进行解析，并和web服务器建立连接 web请求数据被浏览器封装为http报文，并传送到web服务器 web服务器在获取web请求后，根据请求信息，执行相关服务器代码（可能会访问后台服务器，数据库服务器），并将执行结构以html页面的方式返回给客户端 客户端将html页面代码在浏览器结解释执行  HTTP http是一种无状态的网络协议，默认端口为80.无状态是指每一次连接完成后，服务器无法识别上次进行连接的是哪个客户端的哪个程序.http协议传递的报文包括请求报文和响应报文 报文的格式有三部分组成：进行描述的起始行、包含属性的首部块、可选的额包含数据的主体
  http请求报文
http请求报文的格式如下: HTTP方法 请求的url HTTP版本 若干请求首部 空行 请求体
  一个典型的HTTP请求
  GET /index.jsp?param=void HTTP/1.1 Host:www.baidu.com Accept:text/*  http常用请求方法     方法 功能     GET 返回指定文档的内容   POST 利用附带的数据执行指定的文档   PUT 利用附带的数据替换指定的文档   DELETE 删除指定的文档   HEAD 返回指定文档的头信息   HTTP中最常用的是GET和POST方法    GET方法将参数形成字符串。然后附加在url后传输，参数串作为url的一部分出现在http请求的第一行，其中参数字符串以“？”开头参数以“key=value”的键值对的方式显示，每个键值对之间以“&amp;amp;”字符连接    POST方法先将url直接发出，消息头中不在含有参数，参数形成的字符串将被放在http消息体中发送。若发送html表单数据或者处于安全的考虑，应该使用这种方式      http响应报文</description>
    </item>
    
  </channel>
</rss>
