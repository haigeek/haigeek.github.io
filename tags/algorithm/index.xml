<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>algorithm on Kiss&#39;Em!</title>
    <link>https://example.com/tags/algorithm/</link>
    <description>Recent content in algorithm on Kiss&#39;Em!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 27 Dec 2017 21:48:16 +0800</lastBuildDate><atom:link href="https://example.com/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Print linked list from end to beginning</title>
      <link>https://example.com/note/computerscience/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%89%91%E6%8C%87offer%E9%A2%98%E8%A7%A3%E7%AC%94%E8%AE%B0/%E4%BB%8E%E5%90%8E%E5%BE%80%E5%89%8D%E8%BE%93%E5%87%BA%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Wed, 27 Dec 2017 21:48:16 +0800</pubDate>
      
      <guid>https://example.com/note/computerscience/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%89%91%E6%8C%87offer%E9%A2%98%E8%A7%A3%E7%AC%94%E8%AE%B0/%E4%BB%8E%E5%90%8E%E5%BE%80%E5%89%8D%E8%BE%93%E5%87%BA%E9%93%BE%E8%A1%A8/</guid>
      <description>剑指offer面试题5&amp;ndash;从尾到头打印链表 题目 输入一个链表，从尾到头打印链表每个节点的值。
解题思路  输出链表的值可以采用遍历的方法。但是遍历是从头到尾，因此可以采用栈的方式，先进后出的方式； 递归在本质上就是一个栈结构，要实现反过来输出链表，在每次访问一个结点的时候，先递归输出他后面的结点，在输出该结点的本身  代码 import java.util.ArrayList; import java.util.Stack; /** * Created by haigeek on 2017/7/13. */ class ListNode{ int val; ListNode next=null; ListNode(int val){ this.val=val; } } //非递归的方式 public class Solution { public ArrayList&amp;lt;Integer&amp;gt; printListFromTailToHead(ListNode listNode) { Stack&amp;lt;Integer&amp;gt;stack=new Stack&amp;lt;&amp;gt;(); while (listNode!=null){ stack.push(listNode.val); listNode=listNode.next; } ArrayList&amp;lt;Integer&amp;gt;list=new ArrayList&amp;lt;&amp;gt;(); while (!stack.isEmpty()){ list.add(stack.pop()); } return list; } } //递归的方式 public class Solution2{ public ArrayList&amp;lt;Integer&amp;gt; printListFromTailToHead(ListNode listNode) { ArrayList&amp;lt;Integer&amp;gt;list=new ArrayList&amp;lt;&amp;gt;(); if(listNode!</description>
    </item>
    
  </channel>
</rss>
